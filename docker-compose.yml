version: '3.8'

services:
  # Blue Application Instance
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - PORT=${PORT:-3000}
    ports:
      - "${BLUE_PORT:-8081}:${PORT:-3000}"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:${PORT:-3000}/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Green Application Instance
  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - PORT=${PORT:-3000}
    ports:
      - "${GREEN_PORT:-8082}:${PORT:-3000}"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:${PORT:-3000}/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: nginx_lb
    ports:
      - "${NGINX_PORT:-8080}:80"
    volumes:
      - ./nginx.conf.template:/etc/nginx/nginx.conf.template:ro
       environment:
      - ACTIVE_POOL=${ACTIVE_POOL}
      - BACKUP_POOL=${BACKUP_POOL:-green}
      - PORT=${PORT:-3000}
    networks:
      - app_network
    depends_on:
      - app_blue
      - app_green
      command: /bin/sh -c "envsubst '\$ACTIVE_POOL \$BACKUP_POOL \$PORT' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"

networks:
  app_network:
    driver: bridge
